%Program 6.4 Plotting program for three-body problem 
% Inputs: time interval inter, initial conditions
% ic = [x1 vx1 y1 vy1 x2 vx2 y2 vy2 x3 vx3 y3 vy3], x position, x velocity, y pos, y vel,
% number of steps n, steps per point plotted p
% Calls a one-step method such as trapstep.m
% Example usage: orbit3([0 100],[2 0.2 2 -0.2 0 0 0 0 -2 -0.2 -2 0.2],10000,5)
%                orbit3([0 100],[2 0.20001 2 -0.2 0 0 0 0 -2 -0.2 -2 0.2],10000,5)
function z=orbit3_euler(inter,ic,n,p)

inter=[0 100];
%ic=[2 0.2 2 -0.2 0 0 0 0 -2 -0.2 -2 0.2];
ic=[2 0.20001 2 -0.2 0 0 0 0 -2 -0.2 -2 0.2];
n=10000;
p=5;

h=(inter(2)-inter(1))/n;        % plot n points 
% grab initial conditions (position and velocity)
x1=ic(1); vx1=ic(2);  y1=ic(3);  vy1=ic(4); % initial conditions for Mass 1
x2=ic(5); vx2=ic(6);  y2=ic(7);  vy2=ic(8); % initial conditions for Mass 2
x3=ic(9); vx3=ic(10); y3=ic(11); vy3=ic(12);% initial conditions for Mass 3
y(1,:)=[x1 vx1 y1 vy1 x2 vx2 y2 vy2 x3 vx3 y3 vy3];t(1)=inter(1);    % build y vector
set(gca,'XLim',[-5 5],'YLim',[-5 5],'XTick',[-5 0 5],'YTick',...
  [-5 0 5],'Drawmode','fast','Visible','on');
cla;

head1=line('color','r','Marker','.','markersize',25,...
  'erase','xor','xdata',[],'ydata',[]);
head2=line('color','b','Marker','.','markersize',25,...
  'erase','xor','xdata',[],'ydata',[]);
head3=line('color','g','Marker','.','markersize',25,...
  'erase','xor','xdata',[],'ydata',[]);
tail1=line('color','w','LineStyle','-','erase','none',...
  'xdata',[],'ydata',[]);
tail2=line('color','w','LineStyle','-','erase','none',...
  'xdata',[],'ydata',[]);
tail3=line('color','w','LineStyle','-','erase','none',...
  'xdata',[],'ydata',[]);

for k=1:n/p
  for i=1:p
    t(i+1)=t(i)+h;
    y(i+1,:)=eulerstep(t(i),y(i,:),h);
  end
  y(1,:)=y(p+1,:);t(1)=t(p+1);
  set(head1,'xdata',y(1,1),'ydata',y(1,3))
  set(head2,'xdata',y(1,5),'ydata',y(1,7))
  set(head3,'xdata',y(1,9),'ydata',y(1,11))
  set(tail1,'xdata',y(2:p,1),'ydata',y(2:p,3))
  set(tail2,'xdata',y(2:p,5),'ydata',y(2:p,7))
  set(tail3,'xdata',y(2:p,9),'ydata',y(2:p,11))
  drawnow;
end

function y=eulerstep(t,x,h)
%one step of the Euler Method
y=x+h*ydot(t,x);

function z = ydot(t,x)
m1=0.03;m2=0.3;m3=0.03;g=1;mg1=m1*g;mg2=m2*g;mg3=m3*g;
px1=x(1);py1=x(3);vx1=x(2);vy1=x(4);
px2=x(5);py2=x(7);vx2=x(6);vy2=x(8);
px3=x(9);py3=x(11);vx3=x(10);vy3=x(12);
dist12=sqrt((px2-px1)^2+(py2-py1)^2);
dist13=sqrt((px3-px1)^2+(py3-py1)^2);
dist23=sqrt((px3-px2)^2+(py3-py2)^2);
z=zeros(1,4);
z(1)=vx1;
z(2)=(mg2*(px2-px1))/(dist12^3)+(mg3*(px3-px1))/(dist13^3);
z(3)=vy1;
z(4)=(mg2*(py2-py1))/(dist12^3)+(mg3*(py3-py1))/(dist13^3);
z(5)=vx2;
z(6)=(mg1*(px1-px2))/(dist12^3)+(mg3*(px3-px2))/(dist23^3);
z(7)=vy2;
z(8)=(mg1*(py1-py2))/(dist12^3)+(mg3*(py3-py2))/(dist23^3);
z(9)=vx3;
z(10)=(mg1*(px1-px3))/(dist13^3)+(mg2*(px2-px3))/(dist23^3);
z(11)=vy3;
z(12)=(mg1*(py1-py3))/(dist13^3)+(mg2*(py2-py3))/(dist23^3);